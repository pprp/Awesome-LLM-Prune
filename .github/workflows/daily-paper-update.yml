name: Daily ArXiv Paper Update

on:
  schedule:
    # Run daily at 9:00 AM UTC (you can adjust this time)
    - cron: '0 9 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  update-papers:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        pip install requests feedparser python-dateutil openai anthropic python-dotenv
        
    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
    - name: Run paper update script
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: python scripts/update_papers.py
      
    - name: Check for changes and create PR
      id: verify-changed-files
      run: |
        echo "Checking for new commits..."
        
        # Get list of new commits (commits not in origin/main)
        git fetch origin main
        NEW_COMMITS=$(git rev-list HEAD ^origin/main --reverse)
        
        if [ -z "$NEW_COMMITS" ]; then
          echo "No new commits found."
          echo "changed=false" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        echo "Found $(echo "$NEW_COMMITS" | wc -l) new commits"
        echo "changed=true" >> $GITHUB_OUTPUT
        
        # Get all commit messages for PR body
        COMMIT_MESSAGES=""
        for commit in $NEW_COMMITS; do
          MESSAGE=$(git log --format="%s" -n 1 $commit)
          PAPER_TITLE=$(echo "$MESSAGE" | sed 's/Add paper: //')
          COMMIT_MESSAGES="$COMMIT_MESSAGES- $PAPER_TITLE\n"
        done
        
        # Store commit messages for use in PR creation
        echo "commit_messages<<EOF" >> $GITHUB_OUTPUT
        echo -e "$COMMIT_MESSAGES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      
    - name: Create Pull Request
      if: steps.verify-changed-files.outputs.changed == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Add new LLM pruning papers"
        title: "ðŸ“„ Daily ArXiv Paper Update - $(date +'%Y-%m-%d')"
        body: |
          ## ðŸ”¬ New LLM Pruning Papers Found
          
          This PR adds new papers related to LLM pruning and sparsity found on arXiv:
          
          ${{ steps.verify-changed-files.outputs.commit_messages }}
          
          ðŸ¤– Generated automatically by GitHub Actions
          ðŸ“… Run Date: $(date +'%Y-%m-%d %H:%M:%S UTC')
          ðŸ”— Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        branch: daily-papers-$(date +'%Y%m%d')
        delete-branch: true
      
    - name: No changes found
      if: steps.verify-changed-files.outputs.changed == 'false'
      run: |
        echo "No new papers found or no changes to commit."